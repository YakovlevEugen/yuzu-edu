name: Deploy API to Staging

on:
  push:
    branches: [main]
    paths:
      - ".github/workflows/deploy-api-staging.yml"
      - "packages/api/**"
      - "packages/contracts/**"
      - "packages/sdk/**"

  pull_request:
    branches: [main]
    paths:
      - ".github/workflows/deploy-api-staging.yml"
      - "packages/api/**"
      - "packages/contracts/**"
      - "packages/sdk/**"

jobs:
  deploy-api-staging:
    runs-on: r8e

    defaults:
      run:
        working-directory: ./packages/api

    environment:
      name: staging
      url: https://yuzu-api-staging.r8edev.xyz

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install PNPM
        uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          run_install: false

      - name: Get PNPM Store Directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup PNPM Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Configure PNPM
        run: pnpm config set auto-install-peers true

      - name: Install Dependencies
        run: pnpm install

      - name: Setup Env
        env:
          VARS: "${{ secrets.STAGING_VARS }}"
        run: echo $VARS > .staging.vars.json

      - name: Deploy
        run: pnpm run deploy:staging
        env:
          CLOUDFLARE_API_TOKEN: "${{ secrets.CLOUDFLARE_API_TOKEN }}"
